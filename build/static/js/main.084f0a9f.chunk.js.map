{"version":3,"sources":["Components/Filter.js","Components/PersonForm.js","Components/Ihmiset.js","Components/Persons.js","Services/personsServer.js","index.js"],"names":["Filter","filter","value","new","onChange","handle","PersonForm","person","onSubmit","add","name","handleName","number","handleNumber","type","Ihmiset","nimi","numero","nappi","Persons","lista","filteredPersons","testi","toUpperCase","includes","testi2","map","ihminen","key","id","onClick","handleRemove","axios","get","newObject","post","put","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","errorMessage","setErrorMessage","useEffect","console","log","then","response","data","length","message","undefined","className","event","target","preventDefault","check","valueOf","window","confirm","PersonService","setTimeout","response3","catch","error","index","indexOf","slice","placeOfId","response2","personsList","removePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.084f0a9f.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Filter = (filter) => {\n\nreturn(\n<form>\n        <div>\n          Filter shown with: <input\n          value={filter.new}\n          onChange={filter.handle}\n          />\n        </div>\n</form>\n)\n}\n\nexport default Filter\n","import React from 'react'\n\n\nconst PersonForm = (person) => {\nreturn(\n<form onSubmit={person.add}>\n        <div>\n          name: <input \n          value={person.name}\n          onChange={person.handleName} \n          />\n          <p></p>\n          number: <input \n          value={person.number}\n          onChange={person.handleNumber} \n          />\n          <p></p>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n)\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Ihmiset = (person) => {\n    return(\n    <p>  {person.nimi}  {person.numero} {person.nappi}  </p>\n  ) \n  }\n  export default Ihmiset\n\n","import React from 'react'\nimport Ihmiset from './Ihmiset'\n\n\n\nconst Persons = (lista) => {\n  //  console.log(lista.testi)\n  //  console.log(lista.testi2)\nconst filteredPersons = lista.testi.filter(person => person.name.toUpperCase().includes(lista.testi2.toUpperCase()) === true)\n\nconst rivit = () => filteredPersons.map(ihminen => \n\n      <Ihmiset \n      key={ihminen.id}\n      nimi={ihminen.name} \n      numero={ihminen.number} \n      nappi={<button onClick={lista.handleRemove} value={[ihminen.id, ihminen.name]}> delete </button>}\n      />\n  )\n  return(\n      <div>\n        {rivit()}\n    </div>\n  )\n}\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst deletePerson = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {\n    getAll: getAll,\n    create: create,\n    update: update,\n    deletePerson: deletePerson\n}","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport ReactDOM from 'react-dom'\nimport Filter from './Components/Filter'\nimport PersonForm from './Components/PersonForm'\nimport Persons from './Components/Persons'\nimport PersonService from './Services/personsServer'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const baseUrl = '/api/persons'\n\n  const hook = () => {\n    console.log('effect')\n    axios\n      .get(baseUrl)\n      .then(response => {\n    //    console.log(response.data)\n        console.log('promise fulfilled')\n        setPersons(response.data)\n      })\n  }\n  useEffect(hook, [])\n  console.log('render', persons.length, 'persons')\n\n  const Notification = ({ message }) => {\n    console.log(message === undefined || message === null)\n    console.log(message)\n    if (message == null) {\n      console.log('wow')\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\n  const removePerson = id => {\n    console.log(id)\n    console.log(persons)\n    const index = id.indexOf(',')\n    const name = id.slice(index + 1)\n    const placeOfId = id.slice(0, index)\n\n\n    if(window.confirm(`Delete ${name}`)) {\n          PersonService\n            .deletePerson(placeOfId)\n            .then(response2 => {\n              PersonService\n                .getAll()\n                .then(personsList => {\n              //    const personsListFiltered = personsList.filter(person => person.id !== placeOfId)\n         //     console.log(personsList)\n                  setPersons(personsList.data)\n                })\n       //       console.log(`nyt tuli ${response2}`)\n              setErrorMessage(\n                `Removed ${name}`\n              )\n              setTimeout(() => {\n                setErrorMessage(null)\n              }, 5000)\n     //         console.log(response2)\n             // setPersons(persons)\n      })\n      \n      .catch(error => {\n        console.log(`fail ${error}`)\n        setErrorMessage(\n          `${name} has already been removed`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n    }\n  }\n      \n  const addPerson = (event) => {\n    event.preventDefault()\n    /*\n    if(newName.length === 0) {\n      setErrorMessage(\n        `Name is missing`\n      )\n      return false;\n    }\n\n    if(newNumber.length === 0) {\n      setErrorMessage(\n        `Number is missing`\n      )\n      return false;\n    }\n    */\n\n    var check = 0\n    var id = 0\n    persons.map(ihminen => {\n    //  console.log(`${ihminen.name}  and   ${newName}   `)\n    // || ihminen.number.valueOf() === newNumber.valueOf()\n      if (ihminen.name.valueOf() === newName.valueOf()) {\n        check = 1\n        id = ihminen.id\n      }}) \n\n    console.log(check)\n    if (check === 1) {\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with the new one?`)) {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n\n  \n      PersonService\n      .update(id, personObject)\n      .then(response => {\n     //   console.log(response)\n        PersonService\n              .getAll()\n              .then(response => {\n                setPersons(response.data)\n        })\n      })\n      setErrorMessage(\n        `Changed number of ${newName}`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setNewName('')\n      setNewNumber('')\n    }\n    } else {\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n //   console.log(personObject)\n    PersonService\n    .create(personObject)\n    .then(response => {\n   //   console.log(response)\n   //   console.log(personObject)\n      PersonService\n            .getAll()\n            .then(response3 => {\n              setPersons(response3.data)\n      })\n      setErrorMessage(\n        `Added ${newName}`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    })\n    .catch(error => {\n      console.log(error.response.data)\n      setErrorMessage(\n        `Error: ${error.response.data.error}`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 10000)\n    })\n    setNewName('')\n    setNewNumber('')\n  // setPersons(persons.concat(personObject))\n  }\n  }\n\n  const handlePersonChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n  \n  const handleRemove = (event) => {\n    removePerson(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <Filter new={newFilter} handle={handleFilterChange} />\n      <h2>Add a new</h2>\n      <PersonForm add={addPerson} name={newName} handleName={handlePersonChange} number={newNumber} handleNumber={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons key={persons} testi={persons} testi2={newFilter} handleRemove={handleRemove} />\n    </div>\n  )\n  \n\n}\n\nexport default App\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}
{"version":3,"sources":["Components/Filter.js","Components/PersonForm.js","Components/Person.js","Components/Persons.js","Services/personsServer.js","index.js"],"names":["Filter","filter","value","new","onChange","handle","PersonForm","person","onSubmit","add","name","handleName","number","handleNumber","type","Person","button","Persons","list","filteredPersons","personsList","toUpperCase","includes","map","key","id","onClick","handleRemove","axios","get","newObject","post","put","delete","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","errorMessage","setErrorMessage","useEffect","then","response","data","message","className","event","target","preventDefault","check","valueOf","console","log","window","confirm","PersonService","resp","setTimeout","response2","catch","error","index","indexOf","slice","placeOfId","removePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76d78fd8.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst Filter = (filter) => {\n\nreturn(\n<form>\n        <div>\n          Filter shown with: <input\n          value={filter.new}\n          onChange={filter.handle}\n          />\n        </div>\n</form>\n)\n}\n\nexport default Filter\n","import React from 'react'\n\n\nconst PersonForm = (person) => {\nreturn(\n<form onSubmit={person.add}>\n        <div>\n          name: <input \n          value={person.name}\n          onChange={person.handleName} \n          />\n          <p></p>\n          number: <input \n          value={person.number}\n          onChange={person.handleNumber} \n          />\n          <p></p>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n)\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Person = (person) => {\n    return(\n    <p>  {person.name}  {person.number} {person.button}  </p>\n  ) \n  }\n  export default Person","import React from 'react'\nimport Person from './Person'\n\n\n\nconst Persons = (list) => {\nconst filteredPersons = list.personsList.filter(person => person.name.toUpperCase().includes(list.filter.toUpperCase()) === true)\n\nconst rows = () => filteredPersons.map(person => \n\n      <Person \n      key={person.id}\n      name={person.name} \n      number={person.number} \n      button={<button onClick={list.handleRemove} value={[person.id, person.name]}> delete </button>}\n      />\n  )\n  return(\n      <div>\n        {rows()}\n    </div>\n  )\n}\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst create = newObject => {\n    return axios.post(baseUrl, newObject)\n}\n\nconst update = (id, newObject) => {\n    return axios.put(`${baseUrl}/${id}`, newObject)\n}\n\nconst deletePerson = (id) => {\n    return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {\n    getAll: getAll,\n    create: create,\n    update: update,\n    deletePerson: deletePerson\n}","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport ReactDOM from 'react-dom'\nimport Filter from './Components/Filter'\nimport PersonForm from './Components/PersonForm'\nimport Persons from './Components/Persons'\nimport PersonService from './Services/personsServer'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const baseUrl = '/api/persons'\n\n  const hook = () => {\n    axios\n      .get(baseUrl)\n      .then(response => {\n        setPersons(response.data)\n      })\n  }\n  useEffect(hook, [])\n  const Notification = ({ message }) => {\n    if (message == null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\n  const removePerson = id => {\n    const index = id.indexOf(',')\n    const name = id.slice(index + 1)\n    const placeOfId = id.slice(0, index)\n\n\n    if(window.confirm(`Delete ${name}`)) {\n          PersonService\n            .deletePerson(placeOfId)\n            .then(resp => {\n              PersonService\n                .getAll()\n                .then(personsList => {\n                  setPersons(personsList.data)\n                })\n              setErrorMessage(\n                `Removed ${name}`\n              )\n              setTimeout(() => {\n                setErrorMessage(null)\n              }, 5000)\n      })\n      \n      .catch(error => {\n        console.log(`fail ${error}`)\n        setErrorMessage(\n          `${name} has already been removed`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n    }\n  }\n      \n  const addPerson = (event) => {\n    event.preventDefault()\n    var check = 0\n    var id = 0\n    persons.map(person => {\n      if (person.name.valueOf() === newName.valueOf()) {\n        check = 1\n        id = person.id\n      }}) \n\n    console.log(check)\n    if (check === 1) {\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with the new one?`)) {\n      const personObject = {\n        name: newName,\n        number: newNumber\n      }\n\n  \n      PersonService\n      .update(id, personObject)\n      .then(resp => {\n        PersonService\n              .getAll()\n              .then(response => {\n                setPersons(response.data)\n        })\n      })\n      setErrorMessage(\n        `Changed number of ${newName}`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      setNewName('')\n      setNewNumber('')\n    }\n    } else {\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n    PersonService\n    .create(personObject)\n    .then(response => {\n      PersonService\n            .getAll()\n            .then(response2 => {\n              setPersons(response2.data)\n      })\n      setErrorMessage(\n        `Added ${newName}`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    })\n    .catch(error => {\n      setErrorMessage(\n        `Error: ${error.response.data.error}`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 10000)\n    })\n    setNewName('')\n    setNewNumber('')\n  }\n  }\n\n  const handlePersonChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n  \n  const handleRemove = (event) => {\n    removePerson(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={errorMessage} />\n      <Filter new={newFilter} handle={handleFilterChange} />\n      <h2>Add a new</h2>\n      <PersonForm add={addPerson} name={newName} handleName={handlePersonChange} number={newNumber} handleNumber={handleNumberChange} />\n      <h2>Numbers</h2>\n      <Persons key={persons} personsList={persons} filter={newFilter} handleRemove={handleRemove} />\n    </div>\n  )\n  \n\n}\n\nexport default App\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}